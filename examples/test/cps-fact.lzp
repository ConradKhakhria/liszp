(def& factorial&
    # this looks weird because the continuation is the first argument, rather than the last
    (lambda& (k0 n&)
        (<&
            (lambda& c&
                (if& c&
                    (k0 1)
                    (-&
                        (lambda& m&
                            (factorial&
                                (lambda& f&
                                    (*& k0 n& f&)) 
                                m&)) 
                        n& 1)))
            n& 2)))

(factorial& (lambda& f& (println& no-continuation f&)) 10)
